#!/usr/bin/env zsh

if (( ${+PROJECT_DIR} )); then
   local project_dir=${PROJECT_DIR}
else
   local project_dir=$(pwd)
fi
RUN=${project_dir}/run
SENDER=rtpsctp/rtpsctpsend
RECEIVER=rtpsctp/rtpsctprecv
TMP_DIR=/tmp
TMP_RES_DIR=${TMP_DIR}/gst-sctp-results

TARGET=${project_dir}/build
TARGET_DEBUG=${project_dir}/build_debug

DEBUG_SENDER="sctpsink:4,rtpsctpsend:4"
DEBUG_RECEIVER="sctpsrc:4,rtpsctprecv:4"

local ip_sender=${IP_SENDER:-192.168.153.132}
local ip_receiver=${IP_RECEIVER:-192.168.153.134}
local phy1=${PHY1:-ens37}
local phy2=${PHY2:-ens38}

TRAPINT() {
   print "Caught SIGINT, aborting."
   kill ${${(v)jobstates##*:*:}%=*}
   sudo killall rtpsctprecv
   ssh root@${ip_sender} 'killall rtpsctpsend'
   wait
   return -1
}

TRAPEXIT() {
   [[ ! ${+verbose[1]} ]] && set +x
   return -1
}

zparseopts -D -E -- R=norun v=verbose n:=num_runs d=debug -ntp=ntp

if (( ${+verbose[1]} )); then
   set -x
fi

if (( ${+debug[1]} )); then
     DEBUG_SENDER="3,GST_REGISTRY:3,task:3,gstutils:5,GST_STATES:2,structure:3,basesink:3,rtpsctpsend:6,rtpbasepayload:3,rtpvrawpay:3,sctpsink:6,sctputils:4,usrsctpsnd:8"
   DEBUG_RECEIVER="3,GST_REGISTRY:3,task:3,gstutils:5,GST_STATES:2,basesrc:3,pushsrc:5,rtpbasedepayload:5,rtpjitterbuffer:4,rtpsctprecv:5,sctpsrc:5,sctputils:4,usrsctprecv:8"
   TARGET=$TARGET_DEBUG
fi

local variant=${VARIANT:-dpr}
local delay=${DELAY:-30}
local deadline=${DEADLINE:-450}
local num=${NUM:-100}
local drop=${DROP:-5}
local padding=${PADDING:-60}
local runs=${num_runs[2]:-1}

rm -rf $TMP_RES_DIR
mkdir -p $TMP_RES_DIR

count=0
while (( $count < $runs )) ; do
   echo "\033[0;31msetting delay to: ${delay}\033[0m"
   ssh root@${ip_sender} "tc qdisc replace dev $PHY1 root netem loss ${drop}% 25% delay ${delay}ms"
   ssh root@${ip_sender} "tc qdisc replace dev $PHY2 root netem loss ${drop}% 25% delay ${delay}ms"
   sudo tc qdisc replace dev $PHY1 root netem loss ${drop}% 25% delay ${delay}ms
   sudo tc qdisc replace dev $PHY2 root netem loss ${drop}% 25% delay ${delay}ms

   local systime=$(date +%s)

   (
      echo -e "\033[0;31m------- Receiver starting\033[0m"
      PROJECT_DIR=${project_dir} $RUN $TARGET $RECEIVER -d $DEBUG_RECEIVER -V $variant -D $deadline -T $systime --delay $delay --padding $padding
      echo -e "\033[0;32m------- Receiver finished\033[0m"
   ) &

   # if [[ $count == 0 ]] && (( !${+debug[1]} )); then
   #    ntp="--ntp"
   # else
   #    ntp=
   # fi
   (
      echo -e "\033[0;31m------- Sender starting\033[0m"
      ssh root@${ip_sender} "PROJECT_DIR=${project_dir} $RUN $TARGET $SENDER -d $DEBUG_SENDER -V $variant -D $deadline -n $num --delay $delay --padding $padding -T $systime ${ntp[1]:+--ntp}"
      echo -e "\033[0;32m------- Sender finished\033[0m"
   ) &

   wait
   (( count++ ))
   echo "\033[0;32mrun $count finished\033[0m"
   mv ${TMP_RES_DIR}/experiment_trace_in.csv ${TMP_RES_DIR}/experiment_trace_in_${count}.csv
   mv ${TMP_RES_DIR}/experiment_trace_out.csv ${TMP_RES_DIR}/experiment_trace_out_${count}.csv
done

echo "\033[0;32mall runs finished >> writing to results\033[0m"
mkdir ${project_dir}/results
mv ${TMP_RES_DIR} ${project_dir}/results/${variant}_$(date +%F_%R)

cat > ${project_dir}/results/${variant}_$(date +%F_%R)/run_config <<EOL
project_dir=$project_dir
ip_sender=$ip_sender
ip_receiver=$ip_receiver
phy1=$phy1
phy2=$phy2

variant=$variant
delay_on_link=$delay
deadline=$deadline
num_packets=$num
drop_rate=$drop
padding=$padding
runs=$runs
EOL

exit

